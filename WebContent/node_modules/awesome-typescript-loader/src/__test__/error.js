"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
utils_1.spec(__filename, function () {
    return __awaiter(this, void 0, void 0, function* () {
        utils_1.src('index.ts', `
        function sum(a: number, b: number) {
            return a + b;
        }

        sum('test', 1);
    `);
        utils_1.tsconfig();
        let stats = yield utils_1.compile(utils_1.webpackConfig());
        utils_1.expectErrors(stats, 1, [
            './src/index.ts',
            `Argument of type '"test"' is not assignable to parameter of type 'number'`
        ]);
        utils_1.checkOutput('index.js', `
        function sum(a, b) {
            return a + b;
        }

        sum('test', 1);
    `);
    });
});
//# sourceMappingURL=error.js.map