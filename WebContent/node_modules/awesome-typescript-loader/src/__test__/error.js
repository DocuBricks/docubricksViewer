"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
var utils_1 = require('./utils');
utils_1.spec(__filename, function () {
    return __awaiter(this, void 0, void 0, function* () {
        utils_1.src('index.ts', "\n        function sum(a: number, b: number) {\n            return a + b;\n        }\n\n        sum('test', 1);\n    ");
        utils_1.tsconfig();
        var stats = yield utils_1.compile(utils_1.webpackConfig());
        utils_1.expectErrors(stats, 1, [
            './src/index.ts',
            "Argument of type '\"test\"' is not assignable to parameter of type 'number'"
        ]);
        utils_1.checkOutput('index.js', "\n        function sum(a, b) {\n            return a + b;\n        }\n\n        sum('test', 1);\n    ");
    });
});
