"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("./utils");
utils_1.xspec(__filename, function () {
    return __awaiter(this, void 0, void 0, function* () {
        const index = utils_1.src('index.ts', `
        import sum from './sum'
        import mul from './mul'

        sum(1, 1)
        mul(1, 1)
    `);
        utils_1.src('sum.ts', `
        export default function sum(a: number, b: number) {
            return a + b;
        }
    `);
        const mul = utils_1.src('mul.ts', `
        // function with error
        export default function mul(a: number, b: number) {
            return a * c;
        }
    `);
        utils_1.tsconfig();
        const watcher = yield utils_1.watch(utils_1.webpackConfig());
        let stats = yield watcher.wait();
        utils_1.expectErrors(stats, 1, [
            `Cannot find name 'c'`
        ]);
        index.update(() => `
        import sum from './sum'
        sum(1, 1)
    `);
        mul.remove();
        stats = yield watcher.wait();
        utils_1.expectErrors(stats, 0);
    });
});
//# sourceMappingURL=remove.js.map