"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator.throw(value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments)).next());
    });
};
var utils_1 = require('./utils');
function config(env) {
    utils_1.file("webpack.config.js", "\n        const path = require('path')\n        module.exports = {\n            entry: { index: path.join(process.cwd(), '" + env.SRC_DIR + "', 'index.ts') },\n            output: {\n                path: path.join(process.cwd(), '" + env.OUT_DIR + "'),\n                filename: '[name].js'\n            },\n            resolve: {\n                extensions: ['.ts', '.tsx', '.js', '.jsx'],\n            },\n            module: {\n                loaders: [\n                    {\n                        test: /.(tsx?|jsx?)/,\n                        loader: path.resolve(process.cwd(), '..', '..', 'index.js'),\n                        include: [ path.join(process.cwd(), '" + env.SRC_DIR + "') ],\n                        query: {\n                            silent: true\n                        }\n                    }\n                ]\n            }\n        }\n    ");
}
exports.config = config;
utils_1.spec(__filename, function (env, done) {
    return __awaiter(this, void 0, void 0, function* () {
        utils_1.src('index.ts', "\n        export default function sum(a: number, b: number) {\n            return a + b;\n        }\n\n        sum(1, '1');\n    ");
        utils_1.tsconfig();
        config(env);
        var webpack = utils_1.execWebpack();
        webpack.strictOutput();
        yield webpack.wait(utils_1.stderr('Checking finished with 1 errors'), utils_1.stdout([
            'ERROR in [at-loader]',
            "Argument of type '\"1\"' is not assignable to parameter of type 'number'"
        ]));
        webpack.close();
        done();
    });
});
